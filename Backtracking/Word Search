class Solution:
    def exist(self, board: List[List[str]], word: str) -> bool:
        def dfs(board, word, i, j, word_index):
            if word_index == len(word):
                return True
            if i < 0 or i >= len(board) or j < 0 or j >= len(board[0]) or board[i][j] != word[word_index]:
                return False
        
        # Mark the cell as visited
            temp = board[i][j]
            board[i][j] = '#'
        
        # Explore all four directions
            found = (dfs(board, word, i + 1, j, word_index + 1) or
                 dfs(board, word, i - 1, j, word_index + 1) or
                 dfs(board, word, i, j + 1, word_index + 1) or
                 dfs(board, word, i, j - 1, word_index + 1))
        
        # Unmark the cell
            board[i][j] = temp
        
            return found
    
        for i in range(len(board)):
            for j in range(len(board[0])):
                if board[i][j] == word[0] and dfs(board, word, i, j, 0):
                    return True
    
        return False
