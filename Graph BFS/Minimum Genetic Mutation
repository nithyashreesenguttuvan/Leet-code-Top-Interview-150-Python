class Solution:
    def minMutation(self, startGene: str, endGene: str, bank: List[str]) -> int:
        if endGene not in bank:
            return -1
    
        bank = set(bank)
        queue = deque([(startGene, 0)])
        visited = set([startGene])
    
        while queue:
            current, mutations = queue.popleft()
        
            if current == endGene:
                return mutations
        
            for i in range(len(current)):
                for ch in 'ACGT':
                    if ch != current[i]:
                        mutated = current[:i] + ch + current[i+1:]
                        if mutated in bank and mutated not in visited:
                            visited.add(mutated)
                            queue.append((mutated, mutations + 1))
    
        return -1
