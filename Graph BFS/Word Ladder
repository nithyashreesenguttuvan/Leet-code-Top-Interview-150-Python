class Solution:
    def ladderLength(self, beginWord: str, endWord: str, wordList: List[str]) -> int:
        wordList = set(wordList)
        if endWord not in wordList:
            return 0
    
        queue = deque([(beginWord, 1)])
        visited = set([beginWord])
    
        while queue:
            current_word, steps = queue.popleft()
        
            if current_word == endWord:
                return steps
        
            for i in range(len(current_word)):
                for ch in 'abcdefghijklmnopqrstuvwxyz':
                    if ch != current_word[i]:
                        next_word = current_word[:i] + ch + current_word[i+1:]
                        if next_word in wordList and next_word not in visited:
                            visited.add(next_word)
                            queue.append((next_word, steps + 1))
    
        return 0
