class Solution:
    def maxSubarraySumCircular(self, nums: List[int]) -> int:
        def kadane(arr):
            max_ending_here = max_so_far = arr[0]
            for x in arr[1:]:
                max_ending_here = max(x, max_ending_here + x)
                max_so_far = max(max_so_far, max_ending_here)
            return max_so_far

    # Calculate the maximum subarray sum using standard Kadane's algorithm
        max_kadane = kadane(nums)

    # Calculate the total sum of the array
        total_sum = sum(nums)
        max_inverse_kadane = kadane([-x for x in nums])
        max_circular = total_sum + max_inverse_kadane

    # If max_circular is zero, it means all elements are negative
        if max_circular == 0:
            return max_kadane

        return max(max_kadane, max_circular)
